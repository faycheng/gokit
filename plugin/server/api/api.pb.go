// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CallReq struct {
	Method               string   `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Args                 string   `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallReq) Reset()         { *m = CallReq{} }
func (m *CallReq) String() string { return proto.CompactTextString(m) }
func (*CallReq) ProtoMessage()    {}
func (*CallReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *CallReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallReq.Unmarshal(m, b)
}
func (m *CallReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallReq.Marshal(b, m, deterministic)
}
func (m *CallReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallReq.Merge(m, src)
}
func (m *CallReq) XXX_Size() int {
	return xxx_messageInfo_CallReq.Size(m)
}
func (m *CallReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CallReq.DiscardUnknown(m)
}

var xxx_messageInfo_CallReq proto.InternalMessageInfo

func (m *CallReq) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *CallReq) GetArgs() string {
	if m != nil {
		return m.Args
	}
	return ""
}

type CallReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallReply) Reset()         { *m = CallReply{} }
func (m *CallReply) String() string { return proto.CompactTextString(m) }
func (*CallReply) ProtoMessage()    {}
func (*CallReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *CallReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallReply.Unmarshal(m, b)
}
func (m *CallReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallReply.Marshal(b, m, deterministic)
}
func (m *CallReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallReply.Merge(m, src)
}
func (m *CallReply) XXX_Size() int {
	return xxx_messageInfo_CallReply.Size(m)
}
func (m *CallReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CallReply.DiscardUnknown(m)
}

var xxx_messageInfo_CallReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CallReq)(nil), "proto.CallReq")
	proto.RegisterType((*CallReply)(nil), "proto.CallReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskServiceClient is the client API for TaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskServiceClient interface {
	Call(ctx context.Context, in *CallReq, opts ...grpc.CallOption) (*CallReply, error)
}

type taskServiceClient struct {
	cc *grpc.ClientConn
}

func NewTaskServiceClient(cc *grpc.ClientConn) TaskServiceClient {
	return &taskServiceClient{cc}
}

func (c *taskServiceClient) Call(ctx context.Context, in *CallReq, opts ...grpc.CallOption) (*CallReply, error) {
	out := new(CallReply)
	err := c.cc.Invoke(ctx, "/proto.TaskService/Call", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServiceServer is the server API for TaskService service.
type TaskServiceServer interface {
	Call(context.Context, *CallReq) (*CallReply, error)
}

func RegisterTaskServiceServer(s *grpc.Server, srv TaskServiceServer) {
	s.RegisterService(&_TaskService_serviceDesc, srv)
}

func _TaskService_Call_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CallReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).Call(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TaskService/Call",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).Call(ctx, req.(*CallReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TaskService",
	HandlerType: (*TaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Call",
			Handler:    _TaskService_Call_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 131 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xa6, 0x5c, 0xec, 0xce, 0x89, 0x39,
	0x39, 0x41, 0xa9, 0x85, 0x42, 0x62, 0x5c, 0x6c, 0xb9, 0xa9, 0x25, 0x19, 0xf9, 0x29, 0x12, 0x8c,
	0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x50, 0x9e, 0x90, 0x10, 0x17, 0x4b, 0x62, 0x51, 0x7a, 0xb1, 0x04,
	0x13, 0x58, 0x14, 0xcc, 0x56, 0xe2, 0xe6, 0xe2, 0x84, 0x68, 0x2b, 0xc8, 0xa9, 0x34, 0x32, 0xe7,
	0xe2, 0x0e, 0x49, 0x2c, 0xce, 0x0e, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0xd2, 0xe0, 0x62,
	0x01, 0xc9, 0x09, 0xf1, 0x41, 0x6c, 0xd2, 0x83, 0x9a, 0x2f, 0x25, 0x80, 0xc2, 0x2f, 0xc8, 0xa9,
	0x4c, 0x62, 0x03, 0x0b, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xc9, 0xf4, 0x85, 0x46, 0x97,
	0x00, 0x00, 0x00,
}
